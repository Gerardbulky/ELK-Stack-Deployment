apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: elk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
        - name: logstash
          image: docker.elastic.co/logstash/logstash:7.10.0
          ports:
            - containerPort: 5044
          volumeMounts:
            - name: config-volume
              mountPath: /usr/share/logstash/pipeline/
      volumes:
        - name: config-volume
          configMap:
            name: logstash-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  namespace: elk
data:
  logstash.conf: |
    input {
      beats {
        port => 5044
      }
    }
    filter {
      # Parse the JSON from the "message" field
      json {
        source => "message"
        target => "parsed_json"
      }

      # Extracts the timestamp from the JSON and set it as the event timestamp
      date {
        match => ["[parsed_json][@timestamp]", "ISO8601"]
      }

      # Renamed fields to match the desired structure
      mutate {
        rename => { "[parsed_json][@timestamp]" => "timestamp" }
        rename => { "[parsed_json][loglevel]" => "loglevel" }
        rename => { "[parsed_json][component]" => "component" }
        rename => { "[parsed_json][message]" => "message" }
      }

      # Removed the "parsed_json" field to clean up the output
      mutate {
        remove_field => ["parsed_json"]
      }
    }

    output {
      elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        user => "elastic"
        password => "elkpassword"
        index => "logstash-%{+YYYY.MM.dd}"
      }
    }
